$selectors: (
  '.r62qzcdJQ0qezZglOtiUX',
  '._1nBxb6NZrm5NL86Cmgo4g2',
  '._1NqKJdLf1QCef95pyZZwmL',
  '._2Ues_baZj2GagwgvY2XxCb',
  '._1DArl3Gs9lXPcZdmCIlDJa',
  '._2wpaptjZY-3Gn1HOPlL85O',
  '._1k82NiWym4STegDGxRBHz2',
  '._3T-9PkwXmTHyFu3b1pAn2O',
  '.speakerName',
  '.SVGIcon_MobilePhone path'
);

@mixin style-with-parent($parent, $selector, $color) {
  #{$parent} #{$selector} {
    color: rgb(var(#{$color})) !important;
    fill: rgb(var(#{$color})) !important;
  }
}

@each $selector in $selectors {
  @include style-with-parent("[class*='ingame']", $selector, --ingame);
  @include style-with-parent("[class*='online']", $selector, --online);
  @include style-with-parent("[class*='offline']", $selector, --offline);
  @include style-with-parent("[class*='away']", $selector, --away);
  @include style-with-parent(
    "[class*='watchingbroadcast']",
    $selector,
    --watching
  );
  @include style-with-parent(
    ".ingame[class*='away']",
    $selector,
    --away-in-game
  );
}

/* nickname color */
[class*='personanameandstatus_playerNickname'] {
  color: rgb(var(--nickname)) !important;
}

/* friend request icon */
.friendRequestButton {
  .SVGIcon_FriendRequest {
    .friendBodyFull,
    .friendHead,
    .friendArm,
    .friendBody {
      fill: rgb(var(--icon)) !important;
    }
  }

  &:hover .SVGIcon_FriendRequest {
    .friendBodyFull,
    .friendHead,
    .friendArm,
    .friendBody {
      fill: rgb(var(--iconhover)) !important;
    }
  }
}

.friendStatusHover {
  &:not(.quickAccessFriend):hover,
  &.Friend_ContextMenuActive {
    background-color: rgb(var(--header)) !important;
  }
}

/* remove steam opacity on away user */
.friend.awayOrSnooze,
.friend.awayOrSnooze .labelHolder {
  filter: none !important;
  opacity: 1 !important;
}
